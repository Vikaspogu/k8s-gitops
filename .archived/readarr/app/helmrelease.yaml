---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: readarr
  namespace: default
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 5
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 5
  uninstall:
    keepHistory: false
  values:
    controllers:
      app:
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            supplementalGroups:
              - 65536
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/readarr
              tag: 0.4.12.2753@sha256:126f98cd6b459d48ac0286249a4f7e499697a7bdfddfae8784afb11aa83e6b93
            env:
              TZ: "${TIMEZONE}"
              READARR__AUTH__METHOD: External
              READARR__AUTH__REQUIRED: DisabledForLocalAddresses
            resources:
              requests:
                cpu: 15m
                memory: 512M
              limits:
                memory: 1026M
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: &port 8787
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes

    service:
      app:
        controller: app
        ports:
          http:
            port: *port

    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Ingress
          gethomepage.dev/icon: readarr.png
        hosts:
          - host: "readarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - "readarr.${SECRET_DOMAIN}"

    persistence:
      config:
        enabled: true
        existingClaim: readarr-config
      nfs-nas-pvc:
        type: custom
        volumeSpec:
          nfs:
            server: ${SECRET_NAS_ADDRESS}
            path: "/volume1/media"
        enabled: true
        globalMounts:
          - path: /nfs-nas-pvc
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${SECRET_NAS_ADDRESS}"
            path: /volume1/media/Books
        globalMounts:
          - path: /media
