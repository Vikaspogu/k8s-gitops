---
- hosts:
    - rpi-worker
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 5 seconds...
      ansible.builtin.pause:
        seconds: 5
  tasks:
    - name: Locale
      block:
        - name: Locale | Set timezone
          community.general.timezone:
            name: "{{ timezone | default('Etc/UTC') }}"

    - name: User Configuration
      block:
        - name: User Configuration | Add additional SSH public keys
          ansible.posix.authorized_key:
            user: "{{ ansible_user }}"
            key: "{{ item }}"
          loop: "{{ public_ssh_keys | default([]) }}"
        - name: Add user to sudoers
          ansible.builtin.copy:
            content: "{{ ansible_user }} ALL=(ALL:ALL) NOPASSWD:ALL"
            dest: "/etc/sudoers.d/{{ ansible_user }}_nopasswd"
            mode: "0440"

    - name: Networking
      block:
        - name: Set hostname to inventory hostname
          ansible.builtin.hostname:
            name: "{{ inventory_hostname }}"
          when:
            - ansible_hostname != inventory_hostname

        - name: Update /etc/hosts to include hostname
          ansible.builtin.blockinfile:
            path: /etc/hosts
            create: true
            block: |
              127.0.0.1 localhost
              127.0.1.1 {{ inventory_hostname }}
              # The following lines are desirable for IPv6 capable hosts
              ::1 ip6-localhost ip6-loopback
              fe00::0 ip6-localnet
              ff00::0 ip6-mcastprefix
              ff02::1 ip6-allnodes
              ff02::2 ip6-allrouters
              ff02::3 ip6-allhosts

        - name: Check for bridge-nf-call-iptables
          ansible.builtin.stat:
            path: /proc/sys/net/bridge/bridge-nf-call-iptables
          register: bridge_nf_call_iptables_result

        - name: Set Kubernetes network configuration
          ansible.builtin.blockinfile:
            path: /etc/sysctl.d/99-kubernetes-cri.conf
            mode: 0644
            create: true
            block: |
              net.ipv4.ip_forward = 1
              net.bridge.bridge-nf-call-iptables = 1
              net.ipv6.conf.all.forwarding = 1
              net.bridge.bridge-nf-call-ip6tables = 1
          when:
            - bridge_nf_call_iptables_result.stat.exists
          register: sysctl_network

        - name: Reload Kubernetes network configuration
          ansible.builtin.shell: sysctl -p /etc/sysctl.d/99-kubernetes-cri.conf
          when:
            - sysctl_network.changed
            - bridge_nf_call_iptables_result.stat.exists

    - name: Packages
      block:
        - name: Update max_user_watches
          ansible.posix.sysctl:
            name: fs.inotify.max_user_watches
            value: "65536"
            state: present
            sysctl_file: /etc/sysctl.d/98-kubernetes-fs.conf

        - name: Disable swap at runtime
          ansible.builtin.command: swapoff -a
          when: ansible_swaptotal_mb > 0

        - name: Disable swap on boot
          ansible.posix.mount:
            name: "{{ item }}"
            fstype: swap
            state: absent
          loop:
            - swap
            - none

        - name: Upgrade all system packages
          ansible.builtin.apt:
            upgrade: full
            update_cache: true
            cache_valid_time: 3600
            autoclean: true
            autoremove: true
          register: apt_upgrade
          retries: 50
          delay: 30
          until: apt_upgrade is success

        - name: Install common packages
          ansible.builtin.apt:
            name:
              - apt-transport-https
              - arptables
              - ca-certificates
              - curl
              - ebtables
              - iputils-ping
              - ipvsadm
              - lvm2
              - net-tools
              - nfs-common
              - open-iscsi
              - psmisc
              - smartmontools
              - software-properties-common
              - unattended-upgrades
              - bluetooth
              - libbluetooth-dev
            install_recommends: false
            update_cache: true
            cache_valid_time: 3600
            autoclean: true
            autoremove: true
          register: apt_install_common
          retries: 5
          until: apt_install_common is success


        - name: Copy 20auto-upgrades unattended-upgrades config
          ansible.builtin.blockinfile:
            path: /etc/apt/apt.conf.d/20auto-upgrades
            mode: 0644
            create: true
            block: |
              APT::Periodic::Update-Package-Lists "1";
              APT::Periodic::Download-Upgradeable-Packages "1";
              APT::Periodic::AutocleanInterval "7";
              APT::Periodic::Unattended-Upgrade "1";

        - name: Copy 50unattended-upgrades unattended-upgrades config
          ansible.builtin.blockinfile:
            path: /etc/apt/apt.conf.d/50unattended-upgrades
            mode: 0644
            create: true
            block: |
              Unattended-Upgrade::Automatic-Reboot "false";
              Unattended-Upgrade::Remove-Unused-Dependencies "true";
              Unattended-Upgrade::Allowed-Origins {
                  "${distro_id} stable";
                  "${distro_id} ${distro_codename}-security";
                  "${distro_id} ${distro_codename}-updates";
              };

        - name: Start unattended-upgrades service
          ansible.builtin.systemd:
            name: unattended-upgrades
            enabled: true
            state: started

        - name: Restart unattended-upgrades service
          ansible.builtin.service:
            name: unattended-upgrades.service
            daemon_reload: true
            enabled: true
            state: restarted
      notify: Reboot

  handlers:
    - name: Reboot
      ansible.builtin.reboot:
        msg: Rebooting nodes
