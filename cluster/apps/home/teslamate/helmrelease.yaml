---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: teslamate
  namespace: home
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: teslamate
      version: 7.0.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: teslamate/teslamate
      tag: 1.26.1
    env:
      TZ: "${TIMEZONE}"
      DATABASE_USER: ${SECRET_TESLAMATE_DB}
      DATABASE_NAME: ${SECRET_TESLAMATE_DB}
      DATABASE_HOST: ${SECRET_TESLAMATE_DB}-postgresql
      DATABASE_PASS: ${SECRET_TESLAMATE_DB_PASSWORD}
      MQTT_PASSWORD: ${SECRET_MQTT_PASSWORD}
      DISABLE_MQTT: "false"
      MQTT_HOST: "mosquitto.home.svc.cluster.local"
      MQTT_USERNAME: ${SECRET_MQTT_USERNAME}
    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
          hajimari.io/enable: "true"
          hajimari.io/icon: "car-connected"
          hajimari.io/appName: ${SECRET_TESLAMATE_DB}
        hosts:
          - host: teslamate.${SECRET_PRIVATE_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - teslamate.${SECRET_PRIVATE_DOMAIN}
    tolerations:
      - key: "arm"
        operator: "Exists"
    resources:
      requests:
        memory: 250Mi
        cpu: 50m
      limits:
        memory: 500Mi
    probes:
      liveness:
        spec:
          periodSeconds: 10
          failureThreshold: 15
      readiness:
        spec:
          failureThreshold: 15
          periodSeconds: 10
      startup:
        spec:
          initialDelaySeconds: 15
          failureThreshold: 30
          periodSeconds: 10
    postgresql:
      enabled: true
      fullnameOverride: teslamate-postgresql
      nameOverride: teslamate-postgresql
      image:
        repository: postgres
        tag: "13.2"
      auth:
        postgresPassword: ${SECRET_TESLAMATE_DB_PASSWORD}
        database: ${SECRET_TESLAMATE_DB}
        username: ${SECRET_TESLAMATE_DB}
      postgresqlDataDir: "/data/pgdata"
      shmVolume:
        enabled: false
      volumePermissions:
        enabled: false
      primary:
        persistence:
          enabled: true
          existingClaim: "data-teslamate-postgresql"
          mountPath: "/data/"
        tolerations:
          - key: "arm"
            operator: "Exists"
