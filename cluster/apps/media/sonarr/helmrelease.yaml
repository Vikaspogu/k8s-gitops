---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sonarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    image:
      repository: ghcr.io/onedr0p/sonarr-develop
      tag: 4.0.0.430@sha256:15be3a48d2099baa185f8ab47d241ee8e8870dee2ef1b804c2feb44d29979eb1
    env:
      TZ: "${TIMEZONE}"
      SONARR__INSTANCE_NAME: Sonarr
      SONARR__PORT: &port 80
      SONARR__LOG_LEVEL: info
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
          hajimari.io/enable: "true"
          hajimari.io/appName: "Sonarr"
          hajimari.io/icon: "television-box"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.dev/css/base/sonarr/dracula.css"></head>';
            sub_filter_once on;
        hosts:
          - host: "sonarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "sonarr.${SECRET_DOMAIN}"
            secretName: "{{ .Release.Name }}-tls"
    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config
      nfs-nas-pvc:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${SECRET_NAS_ADDRESS}
            path: "/volume1/media"
        mountPath: /nfs-nas-pvc
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 2000Mi
