---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: lidarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    image:
      repository: ghcr.io/onedr0p/lidarr-develop
      tag: 1.1.3.2982@sha256:8316e71b7f43bddba6abc6e8d9bdad7b58ae0a6e9515afb3c8be6f8cf396ad24
    env:
      TZ: "${TIMEZONE}"
      LIDARR__PORT: &port 80
    service:
      main:
        ports:
          http:
            port: *port
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      supplementalGroups:
        - 65536
    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
          hajimari.io/enable: "true"
          hajimari.io/appName: "Lidarr"
          hajimari.io/icon: music-box
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.dev/css/base/radarr/dracula.css"></head>';
            sub_filter_once on;
        hosts:
          - host: "lidarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "lidarr.${SECRET_DOMAIN}"
            secretName: "{{ .Release.Name }}-tls"
    metrics:
      enabled: false
      serviceMonitor:
        interval: 3m
        scrapeTimeout: 1m
      prometheusRule:
        enabled: true
      exporter:
        image:
          repository: ghcr.io/onedr0p/exportarr
          tag: v1.1.0
        env:
          port: 9794
          additionalMetrics: true
          unknownQueueItems: false
    persistence:
      config:
        enabled: true
        existingClaim: lidarr-config
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${SECRET_NAS_ADDRESS}"
            path: /volume1/media
        mountPath: /nfs-nas-pvc
      backup:
        enabled: false
    resources:
      requests:
        memory: 250Mi
        cpu: 500m
      limits:
        memory: 2000Mi
