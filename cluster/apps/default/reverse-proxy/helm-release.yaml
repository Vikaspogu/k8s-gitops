---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: reverse-proxy
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: reverse-proxy
      version: 2.3.3
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    generateTLS:
      enabled: true
      secretName: "reverse-proxy-tls"

    instances:
      - name: nas
        enabled: true
        test: false
        ip: ${SECRET_NAS_ADDRESS}
        # -- Port used by host behind this reverse proxy
        port: 5000
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-production
            external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_DOMAIN}
            external-dns/is-public: "true"
            hajimari.io/appName: nas
            hajimari.io/enable: "true"
            hajimari.io/icon: storage
            kubernetes.io/ingress.class: traefik
            traefik.ingress.kubernetes.io/router.entrypoints: websecure
            traefik.ingress.kubernetes.io/router.middlewares: "security-authelia-auth@kubernetescrd"
          tls:
            - hosts:
                - nas.${SECRET_DOMAIN}
              secretName: nas-tls
          hosts:
            - host: nas.${SECRET_DOMAIN}
              path: /

      - name: rhel8-0
        enabled: true
        test: false
        ip: ${SECRET_RHEL8_0_ADDRESS}
        # -- Port used by host behind this reverse proxy
        port: 9090
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-production-xyz
            hajimari.io/appName: RHEL8-0
            hajimari.io/enable: "true"
            hajimari.io/icon: server
            kubernetes.io/ingress.class: traefik
            traefik.ingress.kubernetes.io/router.entrypoints: websecure
            traefik.ingress.kubernetes.io/router.middlewares: "security-authelia-auth@kubernetescrd"
          tls:
            - hosts:
                - rhel8-0.${SECRET_XYZ_DOMAIN}
              secretName: rhel8-0-xyz-tls
          hosts:
            - host: rhel8-0.${SECRET_XYZ_DOMAIN}
              path: /

      - name: rhv
        enabled: true
        test: false
        ip: ${SECRET_RHV_ADDRESS}
        # -- Port used by host behind this reverse proxy
        port: 443
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-production-xyz
            hajimari.io/appName: RHV
            hajimari.io/enable: "true"
            hajimari.io/icon: server
            kubernetes.io/ingress.class: traefik
            traefik.ingress.kubernetes.io/router.entrypoints: websecure
            traefik.ingress.kubernetes.io/router.middlewares: "security-authelia-auth@kubernetescrd"
          tls:
            - hosts:
                - rhv.${SECRET_XYZ_DOMAIN}
              secretName: rhv-xyz-tls
          hosts:
            - host: rhv.${SECRET_XYZ_DOMAIN}
              path: /
