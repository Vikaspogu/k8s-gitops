---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: k8s-gateway
  namespace: networking
spec:
  interval: 5m
  chart:
    spec:
      chart: kah-common-chart
      version: 1.1.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: quay.io/oriedge/k8s_gateway
      tag: v0.3.0
      pullPolicy: IfNotPresent
    nameOverride: "k8s-gateway"
    args: ["-conf", "/etc/coredns/Corefile"]
    serviceAccount:
      create: true
      name: k8s-gateway
    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        annotations:
          metallb.universe.tf/loadBalancerIPs: "${LB_K8S_GATEWAY}"
        ports:
          http:
            enabled: false
          dns:
            enabled: true
            port: 53
            targetPort: 1053
            protocol: UDP
    persistence:
      config:
        enabled: true
        type: configMap
        name: k8s-gateway-config
        mountPath: /etc/coredns
        readOnly: true
    podAnnotations:
      configmap.reloader.stakater.com/reload: "k8s-gateway-config"
    env:
      TZ: "${TIMEZONE}"
    probes:
      readiness:
        custom: true
        spec:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
      liveness:
        custom: true
        spec:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
      startup:
        custom: true
        spec:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
    configmap:
      config:
        enabled: true
        data:
          Corefile: |
            .:1053 {
              errors
              log
              health {
                lameduck 5s
              }
              ready

              k8s_gateway ${SECRET_PRIVATE_DOMAIN} ${SECRET_DOMAIN} ${SECRET_XYZ_DOMAIN} {
                apex  k8s-gateway.networking
                resources Ingress Service
                ttl 300
              }

              prometheus 0.0.0.0:9153
              loop
              reload
              loadbalance
            }
    resources: {}
