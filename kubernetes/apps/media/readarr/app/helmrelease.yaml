---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: readarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            supplementalGroups:
              - 65536
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/readarr-nightly
              tag: 0.3.19.2424@sha256:b30d37fa8432b17e5f11096eceac2e1c1c5903400a61ad364ad0fc3ff9fe346b
            env:
              TZ: "${TIMEZONE}"
              READARR__PORT: 8080
            resources:
              requests:
                cpu: 15m
                memory: 110M
              limits:
                memory: 250M

    service:
      main:
        ports:
          http:
            port: 8080

    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Ingress
          gethomepage.dev/icon: readarr.png
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.dev/css/base/readarr/dracula.css"></head>';
            sub_filter_once on;
        hosts:
          - host: "readarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - "readarr.${SECRET_DOMAIN}"

    persistence:
      config:
        enabled: true
        existingClaim: readarr-config
      nfs-nas-pvc:
        type: custom
        volumeSpec:
          nfs:
            server: ${SECRET_NAS_ADDRESS}
            path: "/volume1/media"
        enabled: true
        globalMounts:
          - path: /nfs-nas-pvc
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${SECRET_NAS_ADDRESS}"
            path: /volume1/media/Books
        globalMounts:
          - path: /media
