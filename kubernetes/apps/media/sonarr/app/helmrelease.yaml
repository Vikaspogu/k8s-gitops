---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sonarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controllers:
      main:
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              - 100
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.0.731@sha256:6841fcd99f0cc4e7e374b697ad82bc0fd70cdfaed8dca6b13b0e488bee2d5036
            env:
              TZ: "${TIMEZONE}"
              SONARR__INSTANCE_NAME: Sonarr
              SONARR__PORT: &port 80
              SONARR__LOG_LEVEL: info
            resources:
              requests:
                cpu: 15m
                memory: 381M
              limits:
                memory: 2000Mi

    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: "nginx"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: "Sonarr"
          hajimari.io/icon: "television-box"
          nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.dev/css/base/sonarr/dracula.css"></head>';
            sub_filter_once on;
        hosts:
          - host: "sonarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - "sonarr.${SECRET_DOMAIN}"
    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config
      nfs-nas-pvc:
        type: custom
        volumeSpec:
          nfs:
            server: ${SECRET_NAS_ADDRESS}
            path: "/volume1/media"
        enabled: true
        globalMounts:
          - path: /nfs-nas-pvc
