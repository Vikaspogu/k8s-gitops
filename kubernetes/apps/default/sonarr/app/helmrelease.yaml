---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sonarr
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 5
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 5
  uninstall:
    keepHistory: false
  values:
    controllers:
      app:
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              - 100
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.11.2815@sha256:ac6fdfaa7056044d6131f6dbeec93542585ca3b9c76f4ebd3362864c70547e6b
            env:
              TZ: "${TIMEZONE}"
              SONARR__INSTANCE_NAME: Sonarr
              SONARR__PORT: &port 80
              SONARR__LOG_LEVEL: info
            resources:
              requests:
                cpu: 15m
                memory: 381M
              limits:
                memory: 2000Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes

    service:
      app:
        controller: app
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: false
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Ingress
          gethomepage.dev/icon: sonarr.png
        hosts:
          - host: "sonarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - "sonarr.${SECRET_DOMAIN}"
    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config
      nfs-nas-pvc:
        type: custom
        volumeSpec:
          nfs:
            server: ${SECRET_NAS_ADDRESS}
            path: "/volume1/media"
        enabled: true
        globalMounts:
          - path: /nfs-nas-pvc
