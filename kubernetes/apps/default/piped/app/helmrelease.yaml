---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: piped
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: piped
      version: 7.2.0
      sourceRef:
        kind: HelmRepository
        name: piped
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    postgresql:
      enabled: false
    frontend:
      image:
        repository: 1337kavin/piped-frontend
        tag: "latest@sha256:614fa1e70285307ed64d39c76675d787cad9c429307c58b71352d1f72bfb2ac1"
      env:
        BACKEND_HOSTNAME: &api_host papi.${SECRET_DOMAIN}
        TZ: ${TIMEZONE}

    backend:
      image:
        repository: 1337kavin/piped
        tag: "latest@sha256:759979280703ba11e4069405d21c2fed62a902d135fcea25d76fa13a12f278d7"
      podAnnotations:
        configmap.reloader.stakater.com/reload: "piped-backend-config"
      initContainers:
        01-init-db:
          image: ghcr.io/onedr0p/postgres-init:16.8
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: &secret piped-db-creds
      env:
        TZ: ${TIMEZONE}
      config:
        PORT: 8080
        HTTP_WORKERS: 4
        PROXY_PART: https://pproxy.${SECRET_DOMAIN}
        # BG_HELPER_URL: http://piped-bg-helper:3000
        HTTP_PROXY: 127.0.0.1:8888
        # DISABLE_REGISTRATION: false
        database:
          connection_url: jdbc:postgresql://postgres-rw.default.svc.cluster.local/piped
          secret:
            name: *secret
            username: DB_USERNAME
            password: DB_PASSWORD
    ytproxy:
      image:
        repository: 1337kavin/piped-proxy
        tag: "latest@sha256:4a77a613b33d8e8628463044a070a2c6ac353a5d8963f4abc1efccf00754ce09"
    ingress:
      main:
        enabled: true
        ingressClassName: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Ingress
          gethomepage.dev/icon: si-youtube
          nginx.ingress.kubernetes.io/enable-cors: "true"
          nginx.ingress.kubernetes.io/cors-allow-origin: "https://yt.${SECRET_DOMAIN}, https://pproxy.${SECRET_DOMAIN}, https://papi.${SECRET_DOMAIN}"
        hosts:
          - host: &host yt.${SECRET_DOMAIN}
            paths:
              - path: "/"
        tls:
          - hosts:
              - *host
      backend:
        enabled: true
        ingressClassName: internal
        annotations:
          nginx.ingress.kubernetes.io/enable-cors: "true"
          nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS HEAD"
          nginx.ingress.kubernetes.io/cors-allow-origin: "*"
        hosts:
          - host: *api_host
            paths:
              - path: "/"
        tls:
          - hosts:
              - *api_host
      ytproxy:
        enabled: true
        ingressClassName: internal
        annotations:
          nginx.ingress.kubernetes.io/enable-cors: "true"
          nginx.ingress.kubernetes.io/cors-allow-origin: "https://yt.${SECRET_DOMAIN}, https://pproxy.${SECRET_DOMAIN}, https://papi.${SECRET_DOMAIN}"
        hosts:
          - host: &proxy pproxy.${SECRET_DOMAIN}
            paths:
              - path: "/"
        tls:
          - hosts:
              - *proxy
