---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app llama-cpp
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 5
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 5
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      nodeSelector:
        nvidia.feature.node.kubernetes.io/gpu: "true"
      runtimeClassName: nvidia
    controllers:
      llama-cpp:
        replicas: 0
        type: deployment
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          # llama-cpp-server-cuda:
          #   image:
          #     repository: ghcr.io/allenporter/llama-cpp-server-cuda
          #     tag: v2.23.0
          #     pullPolicy: IfNotPresent
          #   command: ["sleep infinity"]
          app:
            image:
              repository: ghcr.io/ggml-org/llama.cpp
              tag: server-cuda@sha256:8c4a376e220cd9a28fe8a6ffa4b218c601399b8531ecd33655b8f5393e1ee679
            command:
              - /bin/bash
              - -c
              - /app/llama-server --model /data/models/DeepSeek-R1-UD-IQ1_S/UD-IQ1_S/DeepSeek-R1-UD-IQ1_S-00001-of-00004.gguf --port 8000 --ctx-size 1024 --n-gpu-layers 40
            env:
              TZ: ${TIMEZONE}
            resources:
              requests:
                cpu: 500m
                nvidia.com/gpu: 1
              limits:
                nvidia.com/gpu: 1
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
                spec:
                  failureThreshold: 30
                  periodSeconds: 5

    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 8000
    ingress:
      app:
        enabled: true
        className: internal
        hosts:
          - host: "llama-cpp.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
    persistence:
      data:
        enabled: true
        existingClaim: llama-config
        globalMounts:
          - path: /data
