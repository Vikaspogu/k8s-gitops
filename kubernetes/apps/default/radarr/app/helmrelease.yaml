---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 5
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 5
  uninstall:
    keepHistory: false
  values:
    controllers:
      app:
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              - 100
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.17.0.9555@sha256:d29684557a373f6efd8ac98f0b7b3007264599d3d83160bdaef9366a3b4f5d5a
            env:
              TZ: "${TIMEZONE}"
              RADARR__INSTANCE_NAME: Radarr
              RADARR__PORT: &port 80
              RADARR__LOG_LEVEL: info
            resources:
              limits:
                memory: 1500Mi
              requests:
                cpu: 250m
                memory: 350Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
    service:
      app:
        controller: app
        ports:
          http:
            port: 80

    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Ingress
          gethomepage.dev/icon: radarr.png
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.dev/css/base/radarr/dracula.css"></head>';
            sub_filter_once on;
        hosts:
          - host: "radarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - "radarr.${SECRET_DOMAIN}"

    persistence:
      config:
        enabled: true
        existingClaim: radarr-config
      nfs-nas-pvc:
        type: custom
        volumeSpec:
          nfs:
            server: ${SECRET_NAS_ADDRESS}
            path: "/volume1/media"
        enabled: true
        globalMounts:
          - path: /nfs-nas-pvc
