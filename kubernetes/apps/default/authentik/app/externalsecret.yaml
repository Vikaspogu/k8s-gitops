---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: authentik
  namespace: default
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: authentik-secret
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        # App
        AUTHENTIK_SECRET_KEY: "{{ .AUTHENTIK_SECRET_KEY }}"
        AUTHENTIK_POSTGRESQL__NAME: &dbName authentik
        AUTHENTIK_POSTGRESQL__HOST: &dbHost postgres17-rw.default.svc.cluster.local
        AUTHENTIK_POSTGRESQL__USER: &dbUser "{{ .AUTHENTIK_POSTGRESQL__USER }}"
        AUTHENTIK_POSTGRESQL__PASSWORD: &dbPass "{{ .AUTHENTIK_POSTGRESQL__PASSWORD }}"
        AUTHENTIK_REDIS__HOST: valkey.default.svc.cluster.local
        AUTHENTIK_REDIS__PORT: "6379"
        AUTHENTIK_REDIS__DB: "3"
        AUTHENTIK_BOOTSTRAP_PASSWORD: "{{.password}}"
        AUTHENTIK_BOOTSTRAP_TOKEN: "{{.AUTHENTIK_BOOTSTRAP_TOKEN}}"
        AUTHENTIK_BOOTSTRAP_EMAIL: "{{.AUTHENTIK_BOOTSTRAP_EMAIL}}"

        MAXMIND_ACCOUNT_ID: "{{ .ACCOUNT_ID }}"
        MAXMIND_LICENSE_KEY: "{{ .LICENSE_KEY }}"

        # Postgres Init
        INIT_POSTGRES_DBNAME: *dbName
        INIT_POSTGRES_HOST: *dbHost
        INIT_POSTGRES_USER: *dbUser
        INIT_POSTGRES_PASS: *dbPass
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"
  dataFrom:
    - extract:
        key: authentik
    - extract:
        key: maxmind
    - extract:
        key: cloudnative-pg
