---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://charts.authentik.com
      chart: authentik
      version: 2025.8.0
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 5
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 5
  uninstall:
    keepHistory: false
  values:
    global:
      deploymentAnnotations:
        secret.reloader.stakater.com/reload: "authentik-secret"
      storageClass: openebs-hostpath
      envFrom:
        - secretRef:
            name: authentik-secret
    authentik:
      log_level: info
      avatars: "gravatar,initials"
      email:
        host: "smtp.sendgrid.net"
        port: 587
        username: "apikey"
        from: "Access <access@${SECRET_DOMAIN}>"
      error_reporting:
        enable: false
        send_pii: false
      outposts:
        container_image_base: ghcr.io/goauthentik/%(type)s:%(version)s
      # https://github.com/goauthentik/authentik/pull/7118
      # https://github.com/goauthentik/authentik/issues/1285
      redis:
        host: "dragonfly.default.svc.cluster.local"
    server:
      replicas: 1
      initContainers:
        - name: init-db
          image: ghcr.io/home-operations/postgres-init:17.6.0@sha256:86a1992d46273c58fd4ad95b626081dfaabfe16bd56944675169e406d1a660dd
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: authentik-secret
      metrics:
        serviceMonitor:
          enabled: true
      ingress:
        enabled: true
        ingressClassName: external
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Ingress
          gethomepage.dev/icon: authentik.png
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          gethomepage.dev/siteMonitor: http://authentik-server.default:80
        hosts:
          - &host id.${SECRET_DOMAIN}
        paths:
          - /
        tls:
          - hosts:
              - *host
    geoip:
      enabled: false
      existingSecret:
        secretName: "authentik-secret"
        accountId: "MAXMIND_ACCOUNT_ID"
        licenseKey: "MAXMIND_LICENSE_KEY"
    prometheus:
      rules:
        enabled: true
    postgresql:
      enabled: false
    redis:
      enabled: false
