---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app tdarr
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 5
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 5
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      nodeSelector:
        nvidia.feature.node.kubernetes.io/gpu: "true"
      runtimeClassName: nvidia
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 100
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups:
          - 44 # video
          - 125 # render
          - 105 # render
          - 568
    controllers:
      tdarr:
        type: deployment
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/haveagitgat/tdarr
              tag: 2.27.02
            env:
              TZ: ${TIMEZONE}
            resources:
              requests:
                memory: 1.5Gi

          node:
            image:
              repository: ghcr.io/haveagitgat/tdarr_node
              tag: 2.27.02
              pullPolicy: IfNotPresent
            env:
              - name: nodeID
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
              - name: serverIP
                value: localhost
              - name: serverPort
                value: 8266
            resources:
              requests:
                memory: 1Gi
                cpu: 1000m
                nvidia.com/gpu: 1
              limits:
                memory: 2Gi
                nvidia.com/gpu: 1

            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: false
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
    service:
      app:
        controller: tdarr
        type: LoadBalancer
        ports:
          http:
            port: 8265
          server:
            enabled: true
            protocol: TCP
            port: 8266

    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Ingress
          gethomepage.dev/icon: tdarr.png
        hosts:
          - host: "tdarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        enabled: true
        existingClaim: tdarr-config
        advancedMounts:
          tdarr:
            app:
              - path: /app/server
                subPath: server
            node:
              - path: /app/configs
                subPath: config
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: &mediaPath /volume1/media
            server: ${SECRET_NAS_ADDRESS}
        globalMounts:
          - path: *mediaPath
            readOnly: false

      cache:
        enabled: true
        type: nfs
        server: ${SECRET_NAS_ADDRESS}
        path: /volume1/media/tdarr-cache
        globalMounts:
          - path: /cache
