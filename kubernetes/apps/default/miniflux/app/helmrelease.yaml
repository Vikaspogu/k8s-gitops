---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app miniflux
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    initContainers:
      01-init-db:
        image: ghcr.io/onedr0p/postgres-init:14.8
        imagePullPolicy: IfNotPresent
        envFrom: &envFrom
          - secretRef:
              name: miniflux-secret
    image:
      repository: ghcr.io/miniflux/miniflux
      tag: 2.0.46
    service:
      main:
        ports:
          http:
            port: &port 8080
    env:
      BASE_URL: https://miniflux.${SECRET_DOMAIN}
      CREATE_ADMIN: "1"
      DEBUG: "1"
      LOG_DATE_TIME: "1"
      OAUTH2_CLIENT_ID: miniflux
      OAUTH2_USER_CREATION: "1"
      OAUTH2_OIDC_DISCOVERY_ENDPOINT: https://auth.${SECRET_DOMAIN}
      OAUTH2_PROVIDER: oidc
      OAUTH2_REDIRECT_URL: https://miniflux.${SECRET_DOMAIN}/oauth2/oidc/callback
      POLLING_SCHEDULER: entry_frequency
      POLLING_FREQUENCY: "15"
      RUN_MIGRATIONS: "1"
    envFrom: *envFrom
    podAnnotations:
      reloader.stakater.com/auto: "true"
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: ingress.${SECRET_DOMAIN}
          hajimari.io/enable: "true"
          hajimari.io/icon: mdi:rss
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /healthcheck
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: *app
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        memory: 750Mi
