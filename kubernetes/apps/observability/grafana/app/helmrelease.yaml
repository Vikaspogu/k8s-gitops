---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
  namespace: observability
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 8.5.3
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 5
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 5
  uninstall:
    keepHistory: false
  values:
    replicas: 1
    deploymentStrategy:
      type: Recreate
    admin:
      existingSecret: grafana
    env:
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true
      GF_SERVER_ROOT_URL: https://grafana.${SECRET_DOMAIN}
      DS_PROMETHEUS: "prometheus"
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth.anonymous:
        enabled: true
        org_id: 1
        org_name: Main Org.
        org_role: Viewer
      news:
        news_feed_enabled: false
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - { name: Alertmanager, orgId: 1 }
          - { name: Loki, orgId: 1 }
          - { name: Prometheus, orgId: 1 }
        datasources:
          - name: Prometheus
            type: prometheus
            url: http://prometheus-operated:9090
            access: proxy
            isDefault: true
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-gateway.observability.svc.cluster.local:80
          - name: TeslaMate
            type: postgres
            access: proxy
            url: postgres-rw.default.svc.cluster.local:5432
            database: teslamate
            user: teslamate
            secureJsonData:
              password: "$TESLAMATE_DB_PASSWORD"
            jsonData:
              postgresVersion: 1000
              sslmode: disable
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            access: proxy
            url: http://alertmanager-operated.observability.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    dashboards:
      default:
        cloudflared:
          # renovate: depName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 37
          datasource: Prometheus
        cloudnative-pg:
          url: https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/samples/monitoring/grafana-dashboard.json
          datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
        ceph-cluster:
          # renovate: depName="Ceph Cluster"
          gnetId: 2842
          revision: 18
          datasource: Prometheus
        ceph-osd:
          # renovate: depName="Ceph - OSD (Single)"
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        ceph-pools:
          # renovate: depName="Ceph - Pools"
          gnetId: 5342
          revision: 9
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 16761
          revision: 16
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 18
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 41
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 37
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 31
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gNetId: 15760
          revision: 21
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
        nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus
        charge-level:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.27.3/grafana/dashboards/charge-level.json
          # datasource: TeslaMate
        charges:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.27.3/grafana/dashboards/charges.json
          # datasource: TeslaMate
        charging-stats:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.27.3/grafana/dashboards/charging-stats.json
          # datasource: TeslaMate
        drive-stats:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.27.3/grafana/dashboards/drive-stats.json
          # datasource: TeslaMate
        drives:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.27.3/grafana/dashboards/drives.json
          # datasource: TeslaMate
        efficiency:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.27.3/grafana/dashboards/efficiency.json
          # datasource: TeslaMate
        locations:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.27.3/grafana/dashboards/locations.json
          # datasource: TeslaMate
        mileage:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.27.3/grafana/dashboards/mileage.json
          # datasource: TeslaMate
        overview:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.27.3/grafana/dashboards/overview.json
          # datasource: TeslaMate
        projected-range:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.27.3/grafana/dashboards/projected-range.json
          # datasource: TeslaMate
        states:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.27.3/grafana/dashboards/states.json
          # datasource: TeslaMate
        trip:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.27.3/grafana/dashboards/trip.json
          # datasource: TeslaMate
        updates:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.27.3/grafana/dashboards/updates.json
          # datasource: TeslaMate
        vampire-drain:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.27.3/grafana/dashboards/vampire-drain.json
          # datasource: TeslaMate
        visited:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.27.3/grafana/dashboards/visited.json
          # datasource: TeslaMate
        charge-details:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.27.3/grafana/dashboards/internal/charge-details.json
        drive-details:
          url: https://raw.githubusercontent.com/adriankumpf/teslamate/v1.27.3/grafana/dashboards/internal/drive-details.json
        volsync:
            # renovate: depName="VolSync Dashboard"
          gnetId: 21356
          revision: 3
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
            - { name: VAR_REPLICATIONDESTNAME, value: .*-dst }
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: internal
      annotations:
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Ingress
        gethomepage.dev/icon: grafana.png
      hosts:
        - grafana.${SECRET_DOMAIN}
      tls:
        - hosts:
            - grafana.${SECRET_DOMAIN}
    persistence:
      enabled: false
    testFramework:
      enabled: false
  valuesFrom:
    - kind: Secret
      name: grafana
      valuesKey: TESLAMATE_DB_PASSWORD
      targetPath: env.TESLAMATE_DB_PASSWORD
      optional: false
