---
data_dir: /vector-data-dir
api:
  enabled: true
  address: 0.0.0.0:8686

enrichment_tables:
  geoip_table:
    type: geoip
    path: /usr/share/GeoIP/GeoLite2-City.mmdb

#
# Sources
#

sources:
  journald_source:
    type: vector
    version: "2"
    address: 0.0.0.0:6000

  kubernetes_source:
    type: vector
    version: "2"
    address: 0.0.0.0:6010

  opnsense_source:
    type: syslog
    address: 0.0.0.0:6020
    mode: tcp

#
# Transforms
#

transforms:
  kubernetes_remap:
    type: remap
    inputs: ["kubernetes_source"]
    source: |
      # Standardize 'app' index
      .custom_app_name = .pod_labels."app.kubernetes.io/name" || .pod_labels.app || .pod_labels."k8s-app" || "unknown"
      # Drop pod_labels
      del(.pod_labels)

  opnsense_firewall_filterlog:
    type: remap
    inputs: ["opnsense_source"]
    source: |
      if .appname == "filterlog" {
        message_array = parse_csv!(string!(.message))
        # ipv4 and ipv6
        if message_array[8] == "4" || message_array[8] == "6" {
          .filteriface   = message_array[4]
          .filterflow    = message_array[7]
          .filteraction  = message_array[6]
          .filteripver   = message_array[8]
          # ipv4
          if message_array[8] == "4" {
            .filterproto   = message_array[16]
            .filterflags   = message_array[23]
            .filtersrcip   = message_array[18]
            .filtersrcport = message_array[20]
            .filterdstip   = message_array[19]
            .filterdstport = message_array[21]
          # ipv6
          } else if message_array[8] == "6" {
            .filterproto   = message_array[12]
            #.filterflags   = "IPv6 not fully supported"
            .filtersrcip   = message_array[15]
            .filtersrcport = message_array[17]
            .filterdstip   = message_array[16]
            .filterdstport = message_array[18]
          }
        }
      }

  opnsense_firewall_split:
    type: route
    inputs: ["opnsense_firewall_filterlog"]
    route:
      pass: '.filteraction == "pass"'
      therest: '.filteraction != "pass"'

  opnsense_firewall_geotag:
    type: geoip
    inputs: ["opnsense_firewall_split.pass"]
    database: "/usr/share/GeoIP/GeoLite2-City.mmdb"
    source: filtersrcip
    target: "geotag"

#
# Sinks
#

sinks:
  journald:
    inputs: ["journald_source"]
    type: loki
    endpoint: http://loki-gateway.monitoring.svc.cluster.local
    encoding: { codec: json }
    out_of_order_action: accept
    remove_label_fields: true
    remove_timestamp: true
    labels:
      hostname: '{{ host }}'

  kubernetes:
    inputs: ["kubernetes_remap"]
    type: loki
    endpoint: http://loki-gateway.monitoring.svc.cluster.local
    encoding: { codec: json }
    out_of_order_action: accept
    remove_label_fields: true
    remove_timestamp: true
    labels:
      app: '{{ custom_app_name }}'
      namespace: '{{ kubernetes.pod_namespace }}'
      node: '{{ kubernetes.pod_node_name }}'

  opnsense:
    inputs: ["opnsense_firewall_split.therest", "opnsense_firewall_geotag"]
    type: loki
    endpoint: http://loki-gateway.monitoring.svc.cluster.local
    encoding: { codec: json }
    out_of_order_action: accept
    remove_label_fields: true
    remove_timestamp: true
    labels:
      logtype: "net"
      server: "firewall"
      hostname: '{{ host }}'
